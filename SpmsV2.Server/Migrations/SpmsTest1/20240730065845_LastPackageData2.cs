using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace SpmsV2.Server.Migrations.SpmsTest1
{
    /// <inheritdoc />
    public partial class LastPackageData2 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "LastPackageData",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DriveConnection1 = table.Column<bool>(type: "bit", nullable: false),
                    CoolingWater1 = table.Column<bool>(type: "bit", nullable: false),
                    Frequency1 = table.Column<double>(type: "float", nullable: false),
                    Power1 = table.Column<double>(type: "float", nullable: false),
                    Current1 = table.Column<double>(type: "float", nullable: false),
                    Fault1 = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PumpOutputPressure1 = table.Column<double>(type: "float", nullable: false),
                    CoolingWaterTemprature1 = table.Column<double>(type: "float", nullable: false),
                    DriveConnection2 = table.Column<bool>(type: "bit", nullable: false),
                    CoolingWater2 = table.Column<bool>(type: "bit", nullable: false),
                    Frequency2 = table.Column<double>(type: "float", nullable: false),
                    Power2 = table.Column<double>(type: "float", nullable: false),
                    Current2 = table.Column<double>(type: "float", nullable: false),
                    Fault2 = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PumpOutputPressure2 = table.Column<double>(type: "float", nullable: false),
                    CoolingWaterTemprature2 = table.Column<double>(type: "float", nullable: false),
                    DriveConnection3 = table.Column<bool>(type: "bit", nullable: false),
                    CoolingWater3 = table.Column<bool>(type: "bit", nullable: false),
                    Frequency3 = table.Column<double>(type: "float", nullable: false),
                    Power3 = table.Column<double>(type: "float", nullable: false),
                    Current3 = table.Column<double>(type: "float", nullable: false),
                    Fault3 = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PumpOutputPressure3 = table.Column<double>(type: "float", nullable: false),
                    CoolingWaterTemprature3 = table.Column<double>(type: "float", nullable: false),
                    DriveConnection4 = table.Column<bool>(type: "bit", nullable: false),
                    CoolingWater4 = table.Column<bool>(type: "bit", nullable: false),
                    Frequency4 = table.Column<double>(type: "float", nullable: false),
                    Power4 = table.Column<double>(type: "float", nullable: false),
                    Current4 = table.Column<double>(type: "float", nullable: false),
                    Fault4 = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PumpOutputPressure4 = table.Column<double>(type: "float", nullable: false),
                    CoolingWaterTemprature4 = table.Column<double>(type: "float", nullable: false),
                    DriveConnection5 = table.Column<bool>(type: "bit", nullable: false),
                    CoolingWater5 = table.Column<bool>(type: "bit", nullable: false),
                    Frequency5 = table.Column<double>(type: "float", nullable: false),
                    Power5 = table.Column<double>(type: "float", nullable: false),
                    Current5 = table.Column<double>(type: "float", nullable: false),
                    Fault5 = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PumpOutputPressure5 = table.Column<double>(type: "float", nullable: false),
                    CoolingWaterTemprature5 = table.Column<double>(type: "float", nullable: false),
                    DriveConnection6 = table.Column<bool>(type: "bit", nullable: false),
                    CoolingWater6 = table.Column<bool>(type: "bit", nullable: false),
                    Frequency6 = table.Column<double>(type: "float", nullable: false),
                    Power6 = table.Column<double>(type: "float", nullable: false),
                    Current6 = table.Column<double>(type: "float", nullable: false),
                    Fault6 = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PumpOutputPressure6 = table.Column<double>(type: "float", nullable: false),
                    CoolingWaterTemprature6 = table.Column<double>(type: "float", nullable: false),
                    DriveConnection7 = table.Column<bool>(type: "bit", nullable: false),
                    CoolingWater7 = table.Column<bool>(type: "bit", nullable: false),
                    Frequency7 = table.Column<double>(type: "float", nullable: false),
                    Power7 = table.Column<double>(type: "float", nullable: false),
                    Current7 = table.Column<double>(type: "float", nullable: false),
                    Fault7 = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PumpOutputPressure7 = table.Column<double>(type: "float", nullable: false),
                    CoolingWaterTemprature7 = table.Column<double>(type: "float", nullable: false),
                    DriveConnection8 = table.Column<bool>(type: "bit", nullable: false),
                    CoolingWater8 = table.Column<bool>(type: "bit", nullable: false),
                    Frequency8 = table.Column<double>(type: "float", nullable: false),
                    Power8 = table.Column<double>(type: "float", nullable: false),
                    Current8 = table.Column<double>(type: "float", nullable: false),
                    Fault8 = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PumpOutputPressure8 = table.Column<double>(type: "float", nullable: false),
                    CoolingWaterTemprature8 = table.Column<double>(type: "float", nullable: false),
                    DriveConnection9 = table.Column<bool>(type: "bit", nullable: false),
                    CoolingWater9 = table.Column<bool>(type: "bit", nullable: false),
                    Frequency9 = table.Column<double>(type: "float", nullable: false),
                    Power9 = table.Column<double>(type: "float", nullable: false),
                    Current9 = table.Column<double>(type: "float", nullable: false),
                    Fault9 = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PumpOutputPressure9 = table.Column<double>(type: "float", nullable: false),
                    CoolingWaterTemprature9 = table.Column<double>(type: "float", nullable: false),
                    DriveConnection10 = table.Column<bool>(type: "bit", nullable: false),
                    CoolingWater10 = table.Column<bool>(type: "bit", nullable: false),
                    Frequency10 = table.Column<double>(type: "float", nullable: false),
                    Power10 = table.Column<double>(type: "float", nullable: false),
                    Current10 = table.Column<double>(type: "float", nullable: false),
                    Fault10 = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    PumpOutputPressure10 = table.Column<double>(type: "float", nullable: false),
                    CoolingWaterTemprature10 = table.Column<double>(type: "float", nullable: false),
                    LineInOpen1 = table.Column<bool>(type: "bit", nullable: false),
                    LineInOpen2 = table.Column<bool>(type: "bit", nullable: false),
                    LineInOpen3 = table.Column<bool>(type: "bit", nullable: false),
                    LineInOpen4 = table.Column<bool>(type: "bit", nullable: false),
                    LineInOpen5 = table.Column<bool>(type: "bit", nullable: false),
                    LineInOpen6 = table.Column<bool>(type: "bit", nullable: false),
                    LineInOpen7 = table.Column<bool>(type: "bit", nullable: false),
                    LineInOpen8 = table.Column<bool>(type: "bit", nullable: false),
                    LineInOpen9 = table.Column<bool>(type: "bit", nullable: false),
                    LineInOpen10 = table.Column<bool>(type: "bit", nullable: false),
                    LineInClose1 = table.Column<bool>(type: "bit", nullable: false),
                    LineInClose2 = table.Column<bool>(type: "bit", nullable: false),
                    LineInClose3 = table.Column<bool>(type: "bit", nullable: false),
                    LineInClose4 = table.Column<bool>(type: "bit", nullable: false),
                    LineInClose5 = table.Column<bool>(type: "bit", nullable: false),
                    LineInClose6 = table.Column<bool>(type: "bit", nullable: false),
                    LineInClose7 = table.Column<bool>(type: "bit", nullable: false),
                    LineInClose8 = table.Column<bool>(type: "bit", nullable: false),
                    LineInClose9 = table.Column<bool>(type: "bit", nullable: false),
                    LineInClose10 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutOpen1 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutOpen2 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutOpen3 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutOpen4 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutOpen5 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutOpen6 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutOpen7 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutOpen8 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutOpen9 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutOpen10 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutClose1 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutClose2 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutClose3 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutClose4 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutClose5 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutClose6 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutClose7 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutClose8 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutClose9 = table.Column<bool>(type: "bit", nullable: false),
                    LineOutClose10 = table.Column<bool>(type: "bit", nullable: false),
                    SuctionPressure = table.Column<double>(type: "float", nullable: false),
                    ThrustPressure = table.Column<double>(type: "float", nullable: false),
                    Flow = table.Column<double>(type: "float", nullable: false),
                    SuctionWaterAvailable = table.Column<bool>(type: "bit", nullable: false),
                    StationFlood = table.Column<bool>(type: "bit", nullable: false),
                    SuctionPressureSwitch = table.Column<bool>(type: "bit", nullable: false),
                    PackageInOpen = table.Column<bool>(type: "bit", nullable: false),
                    PackageInClose = table.Column<bool>(type: "bit", nullable: false),
                    PackageOutOpen = table.Column<bool>(type: "bit", nullable: false),
                    PackageOutClose = table.Column<bool>(type: "bit", nullable: false),
                    ThrustDischargeOpen = table.Column<bool>(type: "bit", nullable: false),
                    ThrustDischargeClose = table.Column<bool>(type: "bit", nullable: false),
                    SuctionDischargeOpen = table.Column<bool>(type: "bit", nullable: false),
                    SuctionDischargeClose = table.Column<bool>(type: "bit", nullable: false),
                    ThrustVentOpen = table.Column<bool>(type: "bit", nullable: false),
                    ThrustVentClose = table.Column<bool>(type: "bit", nullable: false),
                    SuctionVentOpen = table.Column<bool>(type: "bit", nullable: false),
                    SuctionVentClose = table.Column<bool>(type: "bit", nullable: false),
                    PhaseControl = table.Column<bool>(type: "bit", nullable: false),
                    DriveIsRemote1 = table.Column<bool>(type: "bit", nullable: false),
                    DriveIsRemote2 = table.Column<bool>(type: "bit", nullable: false),
                    DriveIsRemote3 = table.Column<bool>(type: "bit", nullable: false),
                    DriveIsRemote4 = table.Column<bool>(type: "bit", nullable: false),
                    DriveIsRemote5 = table.Column<bool>(type: "bit", nullable: false),
                    DriveIsRemote6 = table.Column<bool>(type: "bit", nullable: false),
                    DriveIsRemote7 = table.Column<bool>(type: "bit", nullable: false),
                    DriveIsRemote8 = table.Column<bool>(type: "bit", nullable: false),
                    DriveIsRemote9 = table.Column<bool>(type: "bit", nullable: false),
                    DriveIsRemote10 = table.Column<bool>(type: "bit", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LastPackageData", x => x.Id);
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "LastPackageData");
        }
    }
}
